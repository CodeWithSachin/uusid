# This workflow will run tests, increment patch version, and publish to NPM when PR is merged to main
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build, Test & Publish to NPM

on:
  push:
    branches: [main, master]
  release:
    types: [created]

permissions:
  contents: write
  packages: write
  pull-requests: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run tests
        run: npm run demo

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: "npm"

      - name: Configure Git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Check NPM authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version exists on NPM
        id: check_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if npm view @code_with_sachin/uusid@$CURRENT_VERSION version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists on NPM"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION does not exist on NPM"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Increment patch version
        if: steps.check_version.outputs.exists == 'true'
        run: |
          npm version patch --no-git-tag-version
          echo "New version: $(node -p "require('./package.json').version")"

      - name: Get new version
        id: new_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Commit version bump
        if: steps.check_version.outputs.exists == 'true'
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }} [skip ci]" || echo "No changes to commit"
          git push || echo "Failed to push, continuing anyway"

      - name: Create Git tag
        run: |
          git tag "v${{ steps.new_version.outputs.version }}" || echo "Tag already exists"
          git push origin "v${{ steps.new_version.outputs.version }}" || echo "Failed to push tag, continuing anyway"

      - name: Run pre-publish checks
        run: |
          npm run test
          npm pack --dry-run

      - name: Publish to NPM
        run: |
          if [ "${{ steps.check_version.outputs.exists }}" = "true" ]; then
            echo "Publishing new version ${{ steps.new_version.outputs.version }}"
            npm publish --access public
          else
            echo "Publishing current version ${{ steps.new_version.outputs.version }}"
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.new_version.outputs.version }}
          name: Release v${{ steps.new_version.outputs.version }}
          body: |
            ðŸš€ **New Release: v${{ steps.new_version.outputs.version }}**

            ### What's Changed
            - Automatic patch version bump from v${{ steps.current_version.outputs.version }} to v${{ steps.new_version.outputs.version }}
            - All tests passing âœ…
            - Performance benchmarks validated âœ…

            ### Installation
            ```bash
            npm install @code_with_sachin/uusid@${{ steps.new_version.outputs.version }}
            ```

            ### Full Changelog
            See commit history for detailed changes.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: "npm"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Check NPM authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run pre-publish checks
        run: |
          npm run test
          npm pack --dry-run

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
